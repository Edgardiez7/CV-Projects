version: '3.4'

volumes:
  kong_data: {}
  users_data: {}

networks:
  #Red interna para comunicar los servicios (“Services on the same network can communicate with each other using their name”)
  kong-net:

    null
services:

  Users-API:
    image: user-management-api-image
    build:
      context: ./backendSpringBoot
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      # Networks to join
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://UserManagement-database:3306/UserManagement?createDatabaseIfNotExist=true
    depends_on:
      - UserManagement-database

  Login-API:
    image: user-login-api-image
    build:
      context: ./loginRest
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - 8090:8090
    networks:
      # Networks to join
      - kong-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://UserManagement-database:3306/UserManagement?createDatabaseIfNotExist=true
    depends_on:
      - UserManagement-database


  frontAngular:
    image: my-angular-app
    build:
      context: ./frontendAngular
      dockerfile: ./Dockerfile
    restart: unless-stopped
    ports:
      - 4200:80
    networks:
      # Networks to join
      - kong-net

  UserManagement-database:
    image: mysql #Usamos imagen del respositorio ya creada
    hostname: UserManagement-database
    cap_add:
      - SYS_NICE
    restart: unless-stopped
    ports:
      - "3307:3306"
    networks:
      - kong-net
    volumes:
      - users_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: manager
      MYSQL_PASSWORD: managerPassword
      MYSQL_DATABASE: UserManagement
      MYSQL_ROOT_HOST: '%'
